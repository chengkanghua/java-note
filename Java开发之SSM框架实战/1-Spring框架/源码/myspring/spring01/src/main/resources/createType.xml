<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--spring创建对象的三种方式:-->
    <!--1、使用默认的构造方法-->
    <bean id="team1" class="com.lina.pojo.Team"></bean>
    <!--2、使用带参数的构造方法-->
    <bean id="team2" class="com.lina.pojo.Team">
        <!--name：表示参数的名称，value：给参数赋值-->
        <constructor-arg name="id" value="1001"></constructor-arg>
        <constructor-arg name="name" value="勇士"></constructor-arg>
        <constructor-arg name="location" value="金州"></constructor-arg>
    </bean>
    <bean id="team3" class="com.lina.pojo.Team">
        <!--name：表示参数的下标索引，value：给参数赋值-->
        <constructor-arg index="0" value="1002"></constructor-arg>
        <constructor-arg index="1" value="热火"></constructor-arg>
        <constructor-arg index="2" value="迈阿密"></constructor-arg>
    </bean>
    <!--3、使用工厂方法:
        3.1 使用静态方法
            Team team = MyFactory.staticFun();
    -->
    <bean id="staticTeam" class="com.lina.pojo.MyFactory" factory-method="staticFun"></bean>
    <!-- 3.2 使用实例方法
              MyFactory factory=new MyFactory();
             Team team1 = factory.instanceFun();
    -->
    <bean id="factory" class="com.lina.pojo.MyFactory"></bean>
    <bean id="instanceTeam" factory-bean="factory" factory-method="instanceFun"></bean>
</beans>